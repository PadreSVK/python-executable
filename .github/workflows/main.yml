name: Build and Release

on:
    push: 
        branches: 
            main
jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if (Test-Path requirements.txt) { pip install -r requirements.txt }
        pip install pyinstaller

    - name: Build executable
      run: |
        pyinstaller --onefile main.py
      # Ensure you replace `your_script.py` with the entry point of your application

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-app
        path: dist/

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: my-app
        path: dist/

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/your_script.exe
        asset_name: your_script.exe
        asset_content_type: application/octet-stream
